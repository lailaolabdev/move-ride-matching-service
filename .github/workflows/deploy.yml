name: CI/CD Pipeline to ECR and EC2

on:
  push:
    branches:
      - development

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Configure AWS credentials for GitHub Actions
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Login to ECR from GitHub Actions
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4. Build and Push Docker image to ECR
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/move-ride-matching:latest

      # 5. Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # Login to ECR from EC2 (AWS CLI already configured)
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | sudo docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
            
            # Pull latest image from ECR
            sudo docker pull ${{ steps.login-ecr.outputs.registry }}/move-ride-matching:latest
            
            # Stop and remove old container
            sudo docker stop move-ride-matching || true
            sudo docker rm move-ride-matching || true
            
            # Run new container
            sudo docker run -d -p 8001:8001 \
              -e NODE_ENV=production \
              -e PORT="${{ secrets.PORT }}" \
              -e MONGO_URL="${{ secrets.MONGO_URL }}" \
              -e REDIS_HOST="${{ secrets.REDIS_HOST }}" \
              -e REDIS_PORT="${{ secrets.REDIS_PORT }}" \
              -e IP="${{ secrets.IP }}" \
              -e JWT="${{ secrets.JWT }}" \
              -e JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" \
              -e JWT_REFRESH_SECRET_KEY="${{ secrets.JWT_REFRESH_SECRET_KEY }}" \
              -e JWT_TOKEN_EXPIRES="${{ secrets.JWT_TOKEN_EXPIRES }}" \
              -e JWT_REFRESH_TOKEN_EXPIRES="${{ secrets.JWT_REFRESH_TOKEN_EXPIRES }}" \
              -e PASSWORD="${{ secrets.PASSWORD }}" \
              -e AWS_ACCESS_KEY="${{ secrets.AWS_ACCESS_KEY }}" \
              -e AWS_SECRET_KEY="${{ secrets.AWS_SECRET_KEY }}" \
              -e AWS_BUCKET_NAME="${{ secrets.AWS_BUCKET_NAME }}" \
              -e TWILIO_ACCOUNT_SID="${{ secrets.TWILIO_ACCOUNT_SID }}" \
              -e TWILIO_API_KEY="${{ secrets.TWILIO_API_KEY }}" \
              -e TWILIO_API_SECRET="${{ secrets.TWILIO_API_SECRET }}" \
              -e TWIML_APP_SID="${{ secrets.TWIML_APP_SID }}" \
              -e USER_SERVICE_URL="${{ secrets.USER_SERVICE_URL }}" \
              -e NOTIFICATION_SERVICE_URL="${{ secrets.NOTIFICATION_SERVICE_URL }}" \
              -e PAYMENT_SERVICE_URL="${{ secrets.PAYMENT_SERVICE_URL }}" \
              -e SOCKET_SERVICE_URL="${{ secrets.SOCKET_SERVICE_URL }}" \
              -e REPORT_SERVICE="${{ secrets.REPORT_SERVICE }}" \
              -e API_KEY="${{ secrets.API_KEY }}" \
              --name move-ride-matching \
              ${{ steps.login-ecr.outputs.registry }}/move-ride-matching:latest